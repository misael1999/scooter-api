# Generated by Django 2.2.7 on 2020-07-04 16:01

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MemberStation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('total_orders', models.PositiveIntegerField(default=0)),
                ('total_orders_cancelled', models.PositiveIntegerField(default=0)),
                ('first_order_date', models.DateTimeField(auto_now_add=True)),
                ('last_order_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'stations_member_station',
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('contact_person', models.CharField(max_length=80)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='stations/pictures/')),
                ('station_name', models.CharField(max_length=100)),
                ('station_verified', models.BooleanField(default=False)),
                ('document_verified', models.FileField(upload_to='stations/documents/')),
                ('assign_delivery_manually', models.BooleanField(default=False)),
                ('cancellation_policies', models.TextField(blank=True, null=True)),
                ('allow_cancellations', models.BooleanField(default=True)),
                ('information_is_complete', models.BooleanField(default=False)),
                ('reputation', models.FloatField(default=0)),
                ('total_orders', models.PositiveIntegerField(default=0)),
                ('total_clients', models.PositiveIntegerField(default=0)),
                ('total_delivery_man', models.PositiveIntegerField(default=0)),
                ('total_messages_support', models.PositiveIntegerField(default=0)),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='common.Status')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('alias', models.CharField(max_length=30)),
                ('model', models.CharField(blank=True, max_length=50, null=True)),
                ('year', models.CharField(blank=True, max_length=4, null=True)),
                ('plate', models.CharField(blank=True, max_length=20, null=True)),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stations.Station')),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='common.Status')),
                ('type_vehicle', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='common.TypeVehicle')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StationService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('base_rate_price', models.FloatField()),
                ('price_kilometer', models.FloatField()),
                ('from_kilometer', models.FloatField()),
                ('to_kilometer', models.FloatField()),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='common.Service')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='stations.Station')),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='common.Status')),
            ],
        ),
        migrations.CreateModel(
            name='StationSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('from_hour', models.TimeField()),
                ('to_hour', models.TimeField()),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='common.Schedule')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='stations.Station')),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='common.Status')),
            ],
        ),
        migrations.CreateModel(
            name='StationPhoneNumbers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('alias', models.CharField(max_length=30)),
                ('phone_number', models.CharField(max_length=15)),
                ('is_default', models.BooleanField(default=False)),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stations.Station')),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='common.Status')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StationAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('street', models.CharField(max_length=100)),
                ('suburb', models.CharField(max_length=60)),
                ('postal_code', models.CharField(max_length=10)),
                ('exterior_number', models.CharField(max_length=10)),
                ('inside_number', models.CharField(blank=True, max_length=10, null=True)),
                ('references', models.CharField(blank=True, max_length=150, null=True)),
                ('point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('station', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='stations.Station')),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='common.Status')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
    ]
