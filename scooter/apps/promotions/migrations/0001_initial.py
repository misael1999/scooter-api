# Generated by Django 2.2.7 on 2021-02-07 04:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('merchants', '0047_tag_category'),
        ('orders', '0029_auto_20210115_2024'),
        ('stations', '0012_auto_20201119_1458'),
        ('common', '0018_auto_20201231_1728'),
        ('customers', '0014_customer_total_orders'),
    ]

    operations = [
        migrations.CreateModel(
            name='MerchantPromotion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=150)),
                ('is_available', models.BooleanField(default=True)),
                ('from_date', models.DateTimeField(blank=True, null=True)),
                ('to_date', models.DateTimeField(blank=True, null=True)),
                ('coupon_code', models.CharField(blank=True, max_length=15, null=True)),
                ('reason_not_available', models.CharField(blank=True, max_length=150, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('merchant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='merchants.Merchant')),
            ],
            options={
                'db_table': 'merchant_promotion',
            },
        ),
        migrations.CreateModel(
            name='MerchantPromotionTimeInterval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('from_time', models.TimeField(null=True)),
                ('to_time', models.TimeField(null=True)),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='intervals_time', to='promotions.MerchantPromotion')),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='common.Status')),
            ],
            options={
                'db_table': 'merchant_promotion_time_intervals',
                'ordering': ['from_time'],
                'unique_together': {('promotion', 'from_time', 'to_time')},
            },
        ),
        migrations.CreateModel(
            name='PromotionCustomerRequirements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='common.Status')),
            ],
            options={
                'ordering': ['-created'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MerchantPromotionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('slug_name', models.CharField(max_length=50)),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='common.Status')),
            ],
            options={
                'ordering': ['-created'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MerchantPromotionTimeScheduleInterval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('schedule_name', models.CharField(max_length=15)),
                ('schedule_slug_name', models.CharField(max_length=15)),
                ('promotion_interval', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='days', to='promotions.MerchantPromotionTimeInterval')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='common.Schedule')),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='common.Status')),
            ],
            options={
                'db_table': 'merchant_promotion_schedule_intervals',
                'ordering': ['schedule_id'],
            },
        ),
        migrations.CreateModel(
            name='MerchantPromotionRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_periodic', models.BooleanField()),
                ('has_limit_usage', models.BooleanField()),
                ('has_limit_discount_amount', models.BooleanField()),
                ('is_discount_percentage', models.BooleanField()),
                ('is_coupon_code', models.BooleanField(default=False)),
                ('is_shared_promotion', models.BooleanField(default=False, help_text='Si la promocion en compartida por la central')),
                ('station_payment', models.FloatField(default=0, help_text='Pago por parte de la central')),
                ('merchant_payment', models.FloatField(default=0, help_text='Pago por parte del comercio')),
                ('customer_payment', models.FloatField(default=0, help_text='Pago por parte del cliente')),
                ('minimum_order_price', models.FloatField()),
                ('discount_amount', models.FloatField()),
                ('limit_discount_amount', models.FloatField()),
                ('usage_limit', models.PositiveIntegerField(blank=True, null=True)),
                ('budget', models.FloatField(blank=True, help_text='Presupuesto para la promocion', null=True)),
                ('total_usages', models.PositiveIntegerField(default=0)),
                ('approximate_total_usages', models.PositiveIntegerField(default=0)),
                ('amount_spent', models.FloatField(blank=True, help_text='Gasto hasta el momento', null=True)),
                ('merchant_promotion', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='rule', to='promotions.MerchantPromotion')),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='common.Status')),
            ],
            options={
                'db_table': 'merchant_promotion_rules',
            },
        ),
        migrations.CreateModel(
            name='MerchantPromotionProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('product_name', models.CharField(max_length=100)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='merchants.Product')),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='products', to='promotions.MerchantPromotion')),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='common.Status')),
            ],
            options={
                'db_table': 'merchant_promotion_products',
            },
        ),
        migrations.CreateModel(
            name='MerchantPromotionHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order_amount', models.FloatField()),
                ('subtotal_order_amount', models.FloatField()),
                ('discount', models.FloatField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='customers.Customer')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='orders.Order')),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='days', to='promotions.MerchantPromotion')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='stations.Station')),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='common.Status')),
            ],
            options={
                'ordering': ['-created'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='merchantpromotion',
            name='promotion_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='promotions.MerchantPromotionType'),
        ),
        migrations.AddField(
            model_name='merchantpromotion',
            name='station',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='stations.Station'),
        ),
        migrations.AddField(
            model_name='merchantpromotion',
            name='status',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='common.Status'),
        ),
    ]
